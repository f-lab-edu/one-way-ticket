x-common-environment: &common-environment
  SPRING_DATASOURCE_URL: jdbc:mysql://owt-mysql-db:3306/my-db
  SPRING_DATASOURCE_USERNAME: tester
  SPRING_DATASOURCE_PASSWORD: 1234
  SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
  SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092

services:
  app:
    container_name: owt-app
    build:
      context: .
      dockerfile: api/Dockerfile
    environment:
      <<: *common-environment
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
  event-streaming:
    container_name: event-streaming
    build:
      context: .
      dockerfile: event-streaming/Dockerfile
    depends_on:
      flight-data-loader:
        condition: service_started
      schema-registry:
        condition: service_healthy
  flight-data-loader:
    container_name: flight-data-loader
    build:
      context: .
      dockerfile: flight-data-loader/Dockerfile
    environment:
      <<: *common-environment
    depends_on:
      app:
        condition: service_started
      db:
        condition: service_started
      kafka:
        condition: service_started
      schema-registry:
        condition: service_healthy
  db:
    image: mysql:8.3.0
    container_name: owt-mysql-db
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: my-db
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_USER: tester
      MYSQL_PASSWORD: 1234
    volumes:
      - db-data:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "tester", "-p1234" ]
      interval: 10s
      retries: 5
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
  schema-registry:
    image: confluentinc/cp-schema-registry:7.5.0
    container_name: schema-registry
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    ports:
      - "8081:8081"
    depends_on:
      - kafka
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8081/subjects" ]
      interval: 10s
      retries: 5
      timeout: 5s
volumes:
  db-data: